{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeevi\\\\ttp-team-3-master\\\\src\\\\components\\\\containers\\\\LoginFormContainer.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllUsersThunk, authenticateUser } from \"../../thunks\";\nimport { LoginFormView } from \"../views\";\n\nclass LoginFormContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.validateUser = () => {\n      //const users=this.props.allUsers\n      let errors = { ...this.state.errors\n      };\n      let isValidUser = false;\n      this.authenticateUser(this.state.username, this.state.password);\n\n      if (isValidUser) {\n        errors.username = \"Valid user\";\n      } else {\n        errors.username = \"Invalid username or password\";\n      } // this.setState({ id,isValidUser, errors });\n\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.validateUser();\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isValidUser: false,\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAllUsers();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, this.state.isValidUser ? `` : this.state.errors.username), /*#__PURE__*/React.createElement(LoginFormView, {\n      username: this.state.username,\n      password: this.state.password,\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    allUsers: state.allUsers\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    authenticateUser: () => dispatch(authenticateUser())\n  };\n};\n\nLoginFormContainer.propTypes = {\n  allUsers: PropTypes.array.isRequired,\n  fetchAllUsers: PropTypes.func.isRequired\n};\nexport default connect(mapState, mapDispatch)(LoginFormContainer);","map":{"version":3,"sources":["C:/Users/Jeevi/ttp-team-3-master/src/components/containers/LoginFormContainer.js"],"names":["React","Component","PropTypes","connect","fetchAllUsersThunk","authenticateUser","LoginFormView","LoginFormContainer","constructor","props","handleChange","e","setState","target","name","value","validateUser","errors","state","isValidUser","username","password","handleSubmit","preventDefault","componentDidMount","fetchAllUsers","render","mapState","allUsers","mapDispatch","dispatch","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,EAA4BC,gBAA5B,QAAmD,cAAnD;AACA,SAASC,aAAT,QAA8B,UAA9B;;AACA,MAAMC,kBAAN,SAAiCN,SAAjC,CAA2C;AACzCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,YAdmB,GAcHC,CAAD,IAAO;AAElB,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADd,OAAd;AAIH,KApBkB;;AAAA,SAsBnBC,YAtBmB,GAsBJ,MAAM;AACnB;AACA,UAAIC,MAAM,GAAG,EAAE,GAAG,KAAKC,KAAL,CAAWD;AAAhB,OAAb;AACA,UAAIE,WAAW,GAAG,KAAlB;AACA,WAAKd,gBAAL,CAAsB,KAAKa,KAAL,CAAWE,QAAjC,EAA2C,KAAKF,KAAL,CAAWG,QAAtD;;AACA,UAAIF,WAAJ,EAAiB;AACfF,QAAAA,MAAM,CAACG,QAAP,GAAkB,YAAlB;AACD,OAFD,MAGI;AACFH,QAAAA,MAAM,CAACG,QAAP,GAAkB,8BAAlB;AACD,OAVkB,CAWpB;;AACA,KAlCkB;;AAAA,SAoCnBE,YApCmB,GAoCHX,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACY,cAAF;AACD,WAAKP,YAAL;AACD,KAvCkB;;AAEjB,SAAKE,KAAL,GAAa;AACXE,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXF,MAAAA,WAAW,EAAE,KAHF;AAIXF,MAAAA,MAAM,EAAE;AAJG,KAAb;AAMD;;AAEDO,EAAAA,iBAAiB,GAAG;AAClB,SAAKf,KAAL,CAAWgB,aAAX;AACD;;AA4BDC,EAAAA,MAAM,GAAG;AACP,wBACE,uDAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKR,KAAL,CAAWC,WAAX,GAAyB,EAAzB,GAA4B,KAAKD,KAAL,CAAWD,MAAX,CAAkBG,QAD/C,CAFF,eAKE,oBAAC,aAAD;AACE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QADvB;AAEE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAFvB;AAGE,MAAA,YAAY,EAAE,KAAKC,YAHrB;AAIE,MAAA,YAAY,EAAE,KAAKZ,YAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAcD;;AAxDwC;;AA0D3C,MAAMiB,QAAQ,GAAIT,KAAD,IAAW;AAC1B,SAAO;AACLU,IAAAA,QAAQ,EAAEV,KAAK,CAACU;AADX,GAAP;AAGD,CAJD;;AAKA,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLzB,IAAAA,gBAAgB,EAAE,MAAMyB,QAAQ,CAACzB,gBAAgB,EAAjB;AAD3B,GAAP;AAGD,CAJD;;AAMAE,kBAAkB,CAACwB,SAAnB,GAA+B;AAC3BH,EAAAA,QAAQ,EAAE1B,SAAS,CAAC8B,KAAV,CAAgBC,UADC;AAE3BR,EAAAA,aAAa,EAAEvB,SAAS,CAACgC,IAAV,CAAeD;AAFH,CAA/B;AAKA,eAAe9B,OAAO,CAACwB,QAAD,EAAWE,WAAX,CAAP,CAA+BtB,kBAA/B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllUsersThunk,authenticateUser} from \"../../thunks\";\nimport { LoginFormView } from \"../views\";\nclass LoginFormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isValidUser: false,\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAllUsers();\n  }\n\n  handleChange = (e) => {\n   \n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n    \n  };\n\n  validateUser = () => {\n    //const users=this.props.allUsers\n    let errors = { ...this.state.errors };\n    let isValidUser = false;\n    this.authenticateUser(this.state.username, this.state.password);\n    if (isValidUser) {\n      errors.username = \"Valid user\";\n    }\n    else{\n      errors.username = \"Invalid username or password\";\n    }\n   // this.setState({ id,isValidUser, errors });\n  };\n\n  handleSubmit = (e) => {\n     e.preventDefault();\n    this.validateUser()\n  };\n  render() {\n    return (\n      <>\n        {/* Can potentially be extracted into its own ErrorMessage component */}\n        <div className=\"text-danger\">\n        {this.state.isValidUser ?``: this.state.errors.username}\n        </div>\n        <LoginFormView\n          username={this.state.username}\n          password={this.state.password}\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n        />\n      </>\n    );\n  }\n}\nconst mapState = (state) => {\n  return {\n    allUsers: state.allUsers,\n  };\n};\nconst mapDispatch = (dispatch) => {\n  return {\n    authenticateUser: () => dispatch(authenticateUser()),\n  };\n};\n\nLoginFormContainer.propTypes = {\n    allUsers: PropTypes.array.isRequired,\n    fetchAllUsers: PropTypes.func.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(LoginFormContainer);"]},"metadata":{},"sourceType":"module"}