{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeevi\\\\ttp-team-3-master\\\\src\\\\components\\\\containers\\\\LoginFormContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button, Alert } from 'react-bootstrap';\nimport { authenticateUser } from '../../thunks/index';\n\nclass LoginFormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      username: '',\n      password: '',\n      error: ''\n    };\n\n    this.credentialChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.validateUser = () => {\n      this.props.authenticateUser(this.state.username, this.state.password);\n      console.log(this.props.auth);\n      setTimeout(() => {\n        if (this.props.auth) {\n          return this.props.history.push(\"/home\");\n        } else {\n          this.resetLoginForm();\n          this.setState({\n            \"error\": \"Invalid username and password\"\n          });\n        }\n      }, 500);\n    };\n\n    this.resetLoginForm = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.state = this.initialState;\n  }\n\n  render() {\n    const {\n      username,\n      password,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, this.props.message && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 44\n      }\n    }, this.props.message), error && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 31\n      }\n    }, error), /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"username\",\n      value: username,\n      onChange: this.credentialChange,\n      className: \"bg-dark text-white\",\n      placeholder: \"Enter username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.credentialChange,\n      className: \"bg-dark text-white\",\n      placeholder: \"Enter Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 41\n      }\n    }))))), /*#__PURE__*/React.createElement(Card.Footer, {\n      style: {\n        \"textAlign\": \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      type: \"button\",\n      variant: \"success\",\n      onClick: this.validateUser,\n      disabled: this.state.username.length === 0 || this.state.password.length === 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, \"Login\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      type: \"button\",\n      variant: \"info\",\n      onClick: this.resetLoginForm,\n      disabled: this.state.username.length === 0 && this.state.password.length === 0 && this.state.error.length === 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, \"Reset\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.allUsers.isLoggedIn);\n  return {\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticateUser: (username, password) => dispatch(authenticateUser(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginFormContainer);","map":{"version":3,"sources":["C:/Users/Jeevi/ttp-team-3-master/src/components/containers/LoginFormContainer.js"],"names":["React","Component","connect","Row","Col","Card","Form","InputGroup","FormControl","Button","Alert","authenticateUser","LoginFormContainer","constructor","props","initialState","username","password","error","credentialChange","event","setState","target","name","value","validateUser","state","console","log","auth","setTimeout","history","push","resetLoginForm","render","message","length","mapStateToProps","allUsers","isLoggedIn","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {Row, Col, Card, Form, InputGroup, FormControl, Button, Alert} from 'react-bootstrap';\nimport {authenticateUser} from '../../thunks/index';\n\nclass LoginFormContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n    }\n\n    initialState = {\n        username:'', password:'', error:''\n    };\n\n    credentialChange = event => {\n        this.setState({\n            [event.target.name] : event.target.value\n        });\n    };\n\n    validateUser = () => {\n        this.props.authenticateUser(this.state.username, this.state.password);\n        console.log(this.props.auth)\n        setTimeout(() => {\n          \n            if(this.props.auth) {\n                return this.props.history.push(\"/home\");\n            } else {\n                this.resetLoginForm();\n                this.setState({\"error\":\"Invalid username and password\"});\n            }\n        }, 500);\n    };\n\n    resetLoginForm = () => {\n        this.setState(() => this.initialState);\n    };\n\n    render() {\n        const {username, password, error} = this.state;\n\n        return (\n            <Row className=\"justify-content-md-center\">\n                <Col xs={5}>\n                    {this.props.message && <Alert variant=\"success\">{this.props.message}</Alert>}\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Card className={\"border border-dark bg-dark text-white\"}>\n                        <Card.Header>\n                             Login\n                        </Card.Header>\n                        <Card.Body>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <InputGroup>\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text></InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <FormControl required autoComplete=\"off\" type=\"text\" name=\"username\" value={username} onChange={this.credentialChange}\n                                            className={\"bg-dark text-white\"} placeholder=\"Enter username\"/>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <InputGroup>\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text></InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <FormControl required autoComplete=\"off\" type=\"password\" name=\"password\" value={password} onChange={this.credentialChange}\n                                            className={\"bg-dark text-white\"} placeholder=\"Enter Password\"/>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n                        </Card.Body>\n                        <Card.Footer style={{\"textAlign\":\"right\"}}>\n                            <Button size=\"sm\" type=\"button\" variant=\"success\" onClick={this.validateUser}\n                                disabled={this.state.username.length === 0 || this.state.password.length === 0}>\n                               Login\n                            </Button>{' '}\n                            <Button size=\"sm\" type=\"button\" variant=\"info\" onClick={this.resetLoginForm}\n                                disabled={this.state.username.length === 0 && this.state.password.length === 0 && this.state.error.length === 0}>\n                                 Reset\n                            </Button>\n                        </Card.Footer>\n                    </Card>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n  console.log(state.allUsers.isLoggedIn)\n    return {\n        auth:state.auth\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        authenticateUser: (username, password) => dispatch(authenticateUser(username, password))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginFormContainer);"]},"metadata":{},"sourceType":"module"}