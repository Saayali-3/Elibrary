{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeevi\\\\ttp-team-3-master\\\\src\\\\components\\\\views\\\\ConfirmAccountView.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { confirmUserEntityThunk, fetchAllUsersThunk } from \"../../thunks\";\n\nclass ConfirmAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      show: false\n    };\n  }\n\n  componentDidMount() {\n    var location = window.location.href;\n    var splitToken = location.split('confirm-account?token=');\n    var token = splitToken[1];\n    var url = \"http://localhost:8080/confirm-account?token=\" + token;\n    console.log(location, token);\n    this.props.confirmUserEntity(token).then(() => {\n      this.success();\n      console.log(\"test\", this.state);\n    });\n  }\n\n  success() {\n    const allusers = this.props.allUsers;\n    const users = allusers.payload;\n    console.log(allusers.type);\n\n    if (allusers.type == \"CONFIRM_USER_ENTITY\") {\n      var message = allusers.payload.message;\n      console.log(message);\n      this.setState({\n        message: message,\n        show: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-signin\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"h3 mb-3 font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      show: this.state.show,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 48\n      }\n    }, this.state.message)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, \"Login\"))));\n  }\n\n}\n\nconst mapState = state => {\n  console.log(state);\n  return {\n    allUsers: state.allUsers\n  };\n};\n\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    fetchAllUsers: () => dispatch(fetchAllUsersThunk()),\n    confirmUserEntity: userEntity => dispatch(confirmUserEntityThunk(userEntity, ownProps))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(ConfirmAccount);","map":{"version":3,"sources":["C:/Users/Jeevi/ttp-team-3-master/src/components/views/ConfirmAccountView.js"],"names":["React","connect","confirmUserEntityThunk","fetchAllUsersThunk","ConfirmAccount","Component","constructor","props","state","message","show","componentDidMount","location","window","href","splitToken","split","token","url","console","log","confirmUserEntity","then","success","allusers","allUsers","users","payload","type","setState","render","handleSubmit","mapState","mapDispatch","dispatch","ownProps","fetchAllUsers","userEntity"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {confirmUserEntityThunk,fetchAllUsersThunk } from \"../../thunks\";\r\nclass ConfirmAccount extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { message: '',show:false\r\n\t};\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tvar location=window.location.href;\r\n\t\tvar splitToken=location.split('confirm-account?token=');\r\nvar token=splitToken[1];\r\nvar url=\"http://localhost:8080/confirm-account?token=\"+token;\r\nconsole.log(location,token)\r\nthis.props.confirmUserEntity(token).then(\r\n\t()=>{\r\n  this.success()\r\n  console.log(\"test\",this.state)\r\n\t})\r\n\t}\r\n\tsuccess(){\r\n\t\tconst allusers =this.props.allUsers;\r\n\t\tconst users=allusers.payload;\r\n\t\tconsole.log(allusers.type)\r\n\t\tif(allusers.type==\"CONFIRM_USER_ENTITY\"){\r\n\t\t\r\n\t\t\tvar message= allusers.payload.message;\r\n\t\t\tconsole.log(message)\r\n\t\t\tthis.setState({\r\n\t\t\t\tmessage:message,\r\n\t\t\t\tshow:true\r\n\t\t\t}\r\n\t\t\t)\r\n\t\t\r\n\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t <div className=\"center\">\r\n\t\t\t <div className=\"text-center\">\r\n\t\t\t \r\n\t\t\t <form className=\"form-signin\" onSubmit={this.handleSubmit}>\r\n\t\t\t <h2 className=\"h3 mb-3 font-weight-normal\"><div show={this.state.show}>\r\n\t\t\t\t {this.state.message}\r\n\t\t\t </div></h2>\r\n\t\t\t <br/>\r\n\t\t\t   \r\n\t\t\t  \r\n\t\t\t   \r\n\t\t\t\t\r\n\t\t\t   <button className=\"btn btn-primary\" to=\"/login\">Login</button>\r\n\t\t\t </form>\r\n\t\t\r\n\t\t\t </div>\r\n\t\t   </div>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nconst mapState = (state) => {\r\n\tconsole.log(state)\r\n\t\r\n\treturn {\r\n\t\tallUsers: state.allUsers,\r\n\t  };\r\n\t\r\n  };\r\n  const mapDispatch = (dispatch, ownProps) => {\r\n\treturn {\r\n\t  fetchAllUsers: () => dispatch(fetchAllUsersThunk()),\r\n\t  confirmUserEntity: (userEntity) => dispatch(confirmUserEntityThunk(userEntity, ownProps)),\r\n\t};\r\n  };\r\n  \r\nexport default connect(mapState, mapDispatch)(ConfirmAccount);"]},"metadata":{},"sourceType":"module"}