{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeevi\\\\ttp-team-3-master\\\\src\\\\components\\\\containers\\\\SignupFormContainer.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { SignupFormView } from \"../views\";\nimport { addUserThunk, fetchAllUsersThunk } from \"../../thunks\";\n\nclass SignupFormContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.validateUser = () => {\n      //check is the userName length great than 5 and not duplicate username in database\n      const users = this.props.allUsers;\n      const {\n        userName\n      } = this.state;\n      let errors = { ...this.state.errors\n      };\n      let isValidName = true;\n\n      if (userName.length < 5) {\n        isValidName = false;\n        errors.userName = \"Invalid username, please enter more than 4 characters\";\n      }\n\n      for (let i = 0; i < users.length; i++) {\n        if (this.state.userName === users[i].userName) {\n          isValidName = false;\n          errors.userName = \"Invalid username, duplicate name\";\n          break;\n        }\n      }\n\n      if (isValidName) {\n        this.props.addUser(this.state);\n        errors.userName = \"valid username\";\n      }\n\n      this.setState({\n        isValidName,\n        errors\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.validateUser();\n    };\n\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      email: \"\",\n      isValidName: false,\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAllUsers();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, this.state.isValidName ? \"\" : this.state.errors.userName), /*#__PURE__*/React.createElement(SignupFormView, {\n      userName: this.state.userName,\n      password: this.state.password,\n      email: this.state.email,\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    allUsers: state.allUsers\n  };\n};\n\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    fetchAllUsers: () => dispatch(fetchAllUsersThunk()),\n    addUser: User => dispatch(addUserThunk(User, ownProps))\n  };\n};\n\nSignupFormContainer.propTypes = {\n  allUsers: PropTypes.array.isRequired,\n  addUser: PropTypes.func.isRequired\n};\nexport default connect(mapState, mapDispatch)(SignupFormContainer);","map":{"version":3,"sources":["C:/Users/Jeevi/ttp-team-3-master/src/components/containers/SignupFormContainer.js"],"names":["React","Component","PropTypes","connect","SignupFormView","addUserThunk","fetchAllUsersThunk","SignupFormContainer","constructor","props","handleChange","e","setState","target","name","value","validateUser","users","allUsers","userName","state","errors","isValidName","length","i","addUser","handleSubmit","preventDefault","password","email","componentDidMount","fetchAllUsers","render","mapState","mapDispatch","dispatch","ownProps","User","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { SignupFormView } from \"../views\";\nimport { addUserThunk,fetchAllUsersThunk } from \"../../thunks\";\n\nclass SignupFormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      email: \"\",\n      isValidName: false,\n      errors: {},\n    };\n  }\n  componentDidMount() {\n    this.props.fetchAllUsers();\n  }\n\n  handleChange = (e) => {\n\n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n  };\n\n  validateUser = () => {\n      //check is the userName length great than 5 and not duplicate username in database\n      const users=this.props.allUsers\n    const { userName } = this.state;\n    let errors = { ...this.state.errors };\n    let isValidName = true;\n    if (userName.length < 5) {\n      isValidName = false;\n      errors.userName = \"Invalid username, please enter more than 4 characters\";\n    }\n    for(let i=0;i<users.length;i++){\n      if(this.state.userName===users[i].userName){\n        isValidName = false;\n        errors.userName = \"Invalid username, duplicate name\";\n       break;\n     }\n   }\n    if (isValidName) {\n      this.props.addUser(this.state)\n      errors.userName = \"valid username\";\n    }\n    this.setState({ isValidName, errors });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.validateUser();\n  };\n \n  render() {\n    return (\n      <>\n        {/* Can potentially be extracted into its own ErrorMessage component */}\n        <div className=\"text-danger\">\n        {this.state.isValidName ? \"\" : this.state.errors.userName}\n        </div>\n        <SignupFormView\n          userName={this.state.userName}\n          password={this.state.password}\n          email={this.state.email}\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n        />\n      </>\n    );\n  }\n}\nconst mapState = (state) => {\n  return {\n    allUsers: state.allUsers,\n  };\n};\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    fetchAllUsers: () => dispatch(fetchAllUsersThunk()),\n    addUser: (User) => dispatch(addUserThunk(User, ownProps)),\n  };\n};\n\nSignupFormContainer.propTypes = {\n  allUsers: PropTypes.array.isRequired,\n  addUser: PropTypes.func.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(SignupFormContainer);"]},"metadata":{},"sourceType":"module"}