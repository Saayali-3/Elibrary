{"ast":null,"code":"import * as AT from \"./authTypes\";\nimport axios from \"axios\";\nexport const authenticateUser = (username, password) => {\n  const credentials = {\n    username: username,\n    password: password\n  };\n  console.log(username, password);\n  return dispatch => {\n    dispatch({\n      type: AT.LOGIN_REQUEST\n    });\n    axios.post(\"http://localhost:8080/authenticate\", credentials).then(response => {\n      let token = response.data.token;\n      localStorage.setItem(\"jwtToken\", token);\n      dispatch(success({\n        isLoggedIn: true\n      }));\n    }).catch(error => {\n      dispatch(failure());\n    });\n  };\n};\nexport const logoutUser = () => {\n  return dispatch => {\n    dispatch({\n      type: AT.LOGOUT_REQUEST\n    });\n    localStorage.removeItem(\"jwtToken\");\n    dispatch(success(false));\n  };\n};\n\nconst success = isLoggedIn => {\n  return {\n    type: AT.SUCCESS,\n    payload: {\n      isLoggedIn\n    }\n  };\n};\n\nconst failure = () => {\n  return {\n    type: AT.FAILURE,\n    payload: false\n  };\n};","map":{"version":3,"sources":["C:/Users/Jeevi/ttp-team-3-master/src/store/utilities/authActions.js"],"names":["AT","axios","authenticateUser","username","password","credentials","console","log","dispatch","type","LOGIN_REQUEST","post","then","response","token","data","localStorage","setItem","success","isLoggedIn","catch","error","failure","logoutUser","LOGOUT_REQUEST","removeItem","SUCCESS","payload","FAILURE"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,aAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACtD,QAAMC,WAAW,GAAG;AAClBF,IAAAA,QAAQ,EAAEA,QADQ;AAElBC,IAAAA,QAAQ,EAAEA;AAFQ,GAApB;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAqBC,QAArB;AACA,SAAQI,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,EAAE,CAACU;AADF,KAAD,CAAR;AAGAT,IAAAA,KAAK,CACFU,IADH,CACQ,oCADR,EAC8CN,WAD9C,EAEGO,IAFH,CAESC,QAAD,IAAc;AAClB,UAAIC,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcD,KAA1B;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,KAAjC;AACAN,MAAAA,QAAQ,CAACU,OAAO,CAAC;AAACC,QAAAA,UAAU,EAAC;AAAZ,OAAD,CAAR,CAAR;AACD,KANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChBb,MAAAA,QAAQ,CAACc,OAAO,EAAR,CAAR;AACD,KATH;AAUD,GAdD;AAeD,CArBM;AAuBP,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAQf,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,EAAE,CAACwB;AADF,KAAD,CAAR;AAGAR,IAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACAjB,IAAAA,QAAQ,CAACU,OAAO,CAAC,KAAD,CAAR,CAAR;AACD,GAND;AAOD,CARM;;AAUP,MAAMA,OAAO,GAAIC,UAAD,IAAgB;AAE9B,SAAO;AAELV,IAAAA,IAAI,EAAET,EAAE,CAAC0B,OAFJ;AAGLC,IAAAA,OAAO,EAAE;AAACR,MAAAA;AAAD;AAHJ,GAAP;AAKD,CAPD;;AASA,MAAMG,OAAO,GAAG,MAAM;AACpB,SAAO;AACLb,IAAAA,IAAI,EAAET,EAAE,CAAC4B,OADJ;AAELD,IAAAA,OAAO,EAAC;AAFH,GAAP;AAID,CALD","sourcesContent":["import * as AT from \"./authTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const authenticateUser = (username, password) => {\r\n  const credentials = {\r\n    username: username,\r\n    password: password,\r\n  };\r\n  console.log(username,password)\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: AT.LOGIN_REQUEST,\r\n    });\r\n    axios\r\n      .post(\"http://localhost:8080/authenticate\", credentials)\r\n      .then((response) => {\r\n        let token = response.data.token;\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        dispatch(success({isLoggedIn:true}));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(failure());\r\n      });\r\n  };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: AT.LOGOUT_REQUEST,\r\n    });\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch(success(false));\r\n  };\r\n};\r\n\r\nconst success = (isLoggedIn) => {\r\n \r\n  return {\r\n  \r\n    type: AT.SUCCESS,\r\n    payload: {isLoggedIn},\r\n  };\r\n};\r\n\r\nconst failure = () => {\r\n  return {\r\n    type: AT.FAILURE,\r\n    payload:false,\r\n  };\r\n};"]},"metadata":{},"sourceType":"module"}