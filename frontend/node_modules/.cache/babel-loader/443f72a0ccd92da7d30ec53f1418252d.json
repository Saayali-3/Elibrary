{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeevi\\\\ttp-team-3-master\\\\src\\\\components\\\\containers\\\\BookContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchBookThunk, addItemThunk } from \"../../thunks\";\nimport { BookView } from \"../views\"; // import { user } from \"../../reducers\";\n\nclass BookContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      let sBook = this.props.book;\n      let user = this.props.user;\n\n      if (!sBook.volumeInfo.imageLinks) {\n        sBook.imgUrl = \"https://via.placeholder.com/305x242?text=Placeholder\";\n      } else {\n        sBook.imgUrl = sBook.volumeInfo.imageLinks.thumbnail;\n      }\n\n      if (sBook.saleInfo.saleability === \"NOT_FOR_SALE\") {\n        sBook.sale = false;\n        sBook.price = null;\n      } else {\n        sBook.sale = true;\n        sBook.price = sBook.saleInfo.listPrice.amount;\n      }\n\n      if (sBook.sale) {\n        let item = {\n          uid: sBook.id,\n          title: sBook.volumeInfo.title,\n          imageUrl: sBook.imgUrl,\n          price: sBook.price,\n          userId: user.id\n        };\n        e.preventDefault();\n        this.props.addItem(item);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchBook(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(BookView, {\n      user: this.props.user,\n      book: this.props.book,\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    });\n  }\n\n} // map state to props\n\n\nconst mapState = state => {\n  return {\n    user: state.user,\n    book: state.book\n  };\n};\n\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    fetchBook: id => dispatch(fetchBookThunk(id)),\n    addItem: Item => dispatch(addItemThunk(Item, ownProps))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(BookContainer);","map":{"version":3,"sources":["C:/Users/Jeevi/ttp-team-3-master/src/components/containers/BookContainer.js"],"names":["React","Component","connect","fetchBookThunk","addItemThunk","BookView","BookContainer","handleSubmit","e","sBook","props","book","user","volumeInfo","imageLinks","imgUrl","thumbnail","saleInfo","saleability","sale","price","listPrice","amount","item","uid","id","title","imageUrl","userId","preventDefault","addItem","componentDidMount","fetchBook","match","params","render","mapState","state","mapDispatch","dispatch","ownProps","Item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,cADF,EACiBC,YADjB,QAEO,cAFP;AAIA,SAASC,QAAT,QAAyB,UAAzB,C,CACA;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAEpCM,YAFoC,GAEpBC,CAAD,IAAO;AACpB,UAAIC,KAAK,GAAC,KAAKC,KAAL,CAAWC,IAArB;AACC,UAAIC,IAAI,GAAC,KAAKF,KAAL,CAAWE,IAApB;;AACD,UAAG,CAACH,KAAK,CAACI,UAAN,CAAiBC,UAArB,EAAgC;AAC9BL,QAAAA,KAAK,CAACM,MAAN,GAAa,sDAAb;AACD,OAFD,MAGI;AACFN,QAAAA,KAAK,CAACM,MAAN,GAAaN,KAAK,CAACI,UAAN,CAAiBC,UAAjB,CAA4BE,SAAzC;AACD;;AACD,UAAGP,KAAK,CAACQ,QAAN,CAAeC,WAAf,KAA6B,cAAhC,EAA+C;AAC7CT,QAAAA,KAAK,CAACU,IAAN,GAAW,KAAX;AACAV,QAAAA,KAAK,CAACW,KAAN,GAAY,IAAZ;AACD,OAHD,MAII;AACFX,QAAAA,KAAK,CAACU,IAAN,GAAW,IAAX;AACAV,QAAAA,KAAK,CAACW,KAAN,GAAYX,KAAK,CAACQ,QAAN,CAAeI,SAAf,CAAyBC,MAArC;AACD;;AACD,UAAGb,KAAK,CAACU,IAAT,EACA;AACA,YAAII,IAAI,GAAC;AACPC,UAAAA,GAAG,EAACf,KAAK,CAACgB,EADH;AAEPC,UAAAA,KAAK,EAACjB,KAAK,CAACI,UAAN,CAAiBa,KAFhB;AAGPC,UAAAA,QAAQ,EAAClB,KAAK,CAACM,MAHR;AAIPK,UAAAA,KAAK,EAACX,KAAK,CAACW,KAJL;AAKPQ,UAAAA,MAAM,EAAChB,IAAI,CAACa;AALL,SAAT;AAQAjB,QAAAA,CAAC,CAACqB,cAAF;AACA,aAAKnB,KAAL,CAAWoB,OAAX,CAAmBP,IAAnB;AACD;AAEA,KAjCmC;AAAA;;AAkCpCQ,EAAAA,iBAAiB,GAAG;AAElB,SAAKrB,KAAL,CAAWsB,SAAX,CAAqB,KAAKtB,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB,CAAwBT,EAA7C;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWE,IADnB;AAEE,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,IAFnB;AAGE,MAAA,YAAY,EAAE,KAAKJ,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AA/CmC,C,CAkDtC;;;AACA,MAAM6B,QAAQ,GAAIC,KAAD,IAAW;AAC1B,SAAO;AACJzB,IAAAA,IAAI,EAACyB,KAAK,CAACzB,IADP;AAELD,IAAAA,IAAI,EAAE0B,KAAK,CAAC1B;AAFP,GAAP;AAID,CALD;;AAOA,MAAM2B,WAAW,GAAG,CAACC,QAAD,EAAUC,QAAV,KAAuB;AACzC,SAAO;AACLR,IAAAA,SAAS,EAAGP,EAAD,IAAQc,QAAQ,CAACpC,cAAc,CAACsB,EAAD,CAAf,CADtB;AAELK,IAAAA,OAAO,EAAEW,IAAD,IAAQF,QAAQ,CAACnC,YAAY,CAACqC,IAAD,EAAMD,QAAN,CAAb;AAFnB,GAAP;AAID,CALD;;AAOA,eAAetC,OAAO,CAACkC,QAAD,EAAWE,WAAX,CAAP,CAA+BhC,aAA/B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchBookThunk,addItemThunk\n} from \"../../thunks\";\n\nimport { BookView } from \"../views\";\n// import { user } from \"../../reducers\";\n\nclass BookContainer extends Component {\n\n  handleSubmit = (e) => {\n    let sBook=this.props.book\n     let user=this.props.user\n    if(!sBook.volumeInfo.imageLinks){\n      sBook.imgUrl=\"https://via.placeholder.com/305x242?text=Placeholder\"\n    }\n    else{\n      sBook.imgUrl=sBook.volumeInfo.imageLinks.thumbnail\n    }\n    if(sBook.saleInfo.saleability===\"NOT_FOR_SALE\"){\n      sBook.sale=false;\n      sBook.price=null;\n    }\n    else{\n      sBook.sale=true;\n      sBook.price=sBook.saleInfo.listPrice.amount;\n    }\n    if(sBook.sale)\n    {\n    let item={\n      uid:sBook.id,\n      title:sBook.volumeInfo.title,\n      imageUrl:sBook.imgUrl,\n      price:sBook.price,\n      userId:user.id,\n\n    }\n    e.preventDefault();\n    this.props.addItem(item);\n  }\n\n  };\n  componentDidMount() {\n    \n    this.props.fetchBook(this.props.match.params.id);\n  }\n\n  render() {\n    return (\n      <BookView\n        user={this.props.user}\n        book={this.props.book}\n        handleSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n\n// map state to props\nconst mapState = (state) => {\n  return {\n     user:state.user,\n    book: state.book,\n  };\n};\n\nconst mapDispatch = (dispatch,ownProps) => {\n  return {\n    fetchBook: (id) => dispatch(fetchBookThunk(id)),\n    addItem:(Item)=>dispatch(addItemThunk(Item,ownProps)),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(BookContainer);"]},"metadata":{},"sourceType":"module"}