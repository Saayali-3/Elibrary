{"ast":null,"code":"import axios from \"axios\";\n\nconst custom = require('./apikey');\n\nconst API_KEY = custom.config.API_KEY; // ACTION TYPE\n\nconst GET_BOOK_INFO = \"GET_BOOK_INFO\";\nconst FETCH_NEWEST_TEN = \"FETCH_NEWEST_TEN\";\nconst SEARCH_BOOKS = \"SEARCH_BOOKS\"; // ACTION CERATOR\n\nconst fetchBooks = bookData => {\n  return {\n    type: GET_BOOK_INFO,\n    payload: bookData\n  };\n};\n\nconst fetchNewestTen = tenBooks => {\n  return {\n    type: FETCH_NEWEST_TEN,\n    payload: tenBooks\n  };\n};\n\nconst searchProducts = books => {\n  return {\n    type: SEARCH_BOOKS,\n    payload: books\n  };\n}; // THUNK\n\n\nexport const fetchBooksThunker = () => dispatch => {\n  return axios.get(`https://www.googleapis.com/books/v1/volumes?q=javascript&printType=books&key=${API_KEY}`).then(res => res.data.items).then(bookData => dispatch(fetchBooks(bookData))).catch(err => console.log(\"Thunk err: \", err));\n};\nexport const fetchNewestTenThunk = () => dispatch => {\n  return axios.get(`https://www.googleapis.com/books/v1/volumes?q=\"\"&key=${API_KEY}&maxResults=10`).then(res => res.data.items).then(tenBooks => dispatch(fetchNewestTen(tenBooks))).catch(err => console.log(\"Thunk err: \", err));\n};\nexport const searchBooksThunk = (search, ownProps) => dispatch => {\n  let url = `https://www.googleapis.com/books/v1/volumes?q=${Object.values(search)[0]}&printType=books&key=${API_KEY}`;\n  return axios.get(url).then(res => res.data.items).then(books => {\n    dispatch(searchProducts(books));\n    ownProps.history.push(\"/books/s/search\");\n  }).catch(err => console.log(err));\n}; // REDUCER\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case GET_BOOK_INFO:\n      return action.payload;\n\n    case FETCH_NEWEST_TEN:\n      return action.payload;\n\n    case SEARCH_BOOKS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Jeevi/ttp-team-3-master/src/store/utilities/allBooks.js"],"names":["axios","custom","require","API_KEY","config","GET_BOOK_INFO","FETCH_NEWEST_TEN","SEARCH_BOOKS","fetchBooks","bookData","type","payload","fetchNewestTen","tenBooks","searchProducts","books","fetchBooksThunker","dispatch","get","then","res","data","items","catch","err","console","log","fetchNewestTenThunk","searchBooksThunk","search","ownProps","url","Object","values","history","push","reducer","state","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,OAAO,GAACF,MAAM,CAACG,MAAP,CAAcD,OAA5B,C,CACA;;AACA,MAAME,aAAa,GAAG,eAAtB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,YAAY,GAAC,cAAnB,C,CACA;;AACA,MAAMC,UAAU,GAAIC,QAAD,IAAc;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAEL,aADD;AAELM,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMG,cAAc,GAAIC,QAAD,IAAc;AACnC,SAAO;AACLH,IAAAA,IAAI,EAAEJ,gBADD;AAELK,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD;;AAMA,MAAMC,cAAc,GAAEC,KAAD,IAAS;AAC5B,SAAO;AACLL,IAAAA,IAAI,EAAEH,YADD;AAELI,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID,CALD,C,CAMA;;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,QAAD,IAAc;AACnD,SAAOjB,KAAK,CACTkB,GADI,CAEF,gFAA+Ef,OAAQ,EAFrF,EAIJgB,IAJI,CAIEC,GAAD,IAASA,GAAG,CAACC,IAAJ,CAASC,KAJnB,EAKJH,IALI,CAKEV,QAAD,IAAcQ,QAAQ,CAACT,UAAU,CAACC,QAAD,CAAX,CALvB,EAMJc,KANI,CAMGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B,CANX,CAAP;AAOD,CARM;AAUP,OAAO,MAAMG,mBAAmB,GAAG,MAAOV,QAAD,IAAc;AACrD,SAAOjB,KAAK,CACTkB,GADI,CAEF,wDAAuDf,OAAQ,gBAF7D,EAIJgB,IAJI,CAIEC,GAAD,IAASA,GAAG,CAACC,IAAJ,CAASC,KAJnB,EAKJH,IALI,CAKEN,QAAD,IAAcI,QAAQ,CAACL,cAAc,CAACC,QAAD,CAAf,CALvB,EAMJU,KANI,CAMGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B,CANX,CAAP;AAOD,CARM;AASP,OAAO,MAAMI,gBAAgB,GAAG,CAACC,MAAD,EAASC,QAAT,KAAuBb,QAAD,IAAc;AAChE,MAAIc,GAAG,GAAE,iDAAgDC,MAAM,CAACC,MAAP,CAAcJ,MAAd,EAAsB,CAAtB,CAAyB,wBAAuB1B,OAAQ,EAAjH;AACF,SAAOH,KAAK,CACTkB,GADI,CACAa,GADA,EAEJZ,IAFI,CAEEC,GAAD,IAASA,GAAG,CAACC,IAAJ,CAASC,KAFnB,EAGJH,IAHI,CAGEJ,KAAD,IAAW;AACfE,IAAAA,QAAQ,CAACH,cAAc,CAACC,KAAD,CAAf,CAAR;AACAe,IAAAA,QAAQ,CAACI,OAAT,CAAiBC,IAAjB,CAAsB,iBAAtB;AACD,GANI,EAOJZ,KAPI,CAOGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPX,CAAP;AAQD,CAVM,C,CAYP;;AACA,MAAMY,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACtC,UAAQA,MAAM,CAAC5B,IAAf;AACE,SAAKL,aAAL;AACE,aAAOiC,MAAM,CAAC3B,OAAd;;AACF,SAAKL,gBAAL;AACE,aAAOgC,MAAM,CAAC3B,OAAd;;AACF,SAAKJ,YAAL;AACE,aAAO+B,MAAM,CAAC3B,OAAd;;AACF;AACE,aAAO0B,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAeD,OAAf","sourcesContent":["import axios from \"axios\";\nconst custom = require('./apikey');\nconst API_KEY=custom.config.API_KEY\n// ACTION TYPE\nconst GET_BOOK_INFO = \"GET_BOOK_INFO\";\nconst FETCH_NEWEST_TEN = \"FETCH_NEWEST_TEN\";\nconst SEARCH_BOOKS=\"SEARCH_BOOKS\";\n// ACTION CERATOR\nconst fetchBooks = (bookData) => {\n  return {\n    type: GET_BOOK_INFO,\n    payload: bookData,\n  };\n};\n\nconst fetchNewestTen = (tenBooks) => {\n  return {\n    type: FETCH_NEWEST_TEN,\n    payload: tenBooks,\n  };\n};\nconst searchProducts=(books)=>{\n  return {\n    type: SEARCH_BOOKS,\n    payload: books,\n  };\n};\n// THUNK\nexport const fetchBooksThunker = () => (dispatch) => {\n  return axios\n    .get(\n      `https://www.googleapis.com/books/v1/volumes?q=javascript&printType=books&key=${API_KEY}`\n    )\n    .then((res) => res.data.items)\n    .then((bookData) => dispatch(fetchBooks(bookData)))\n    .catch((err) => console.log(\"Thunk err: \", err));\n};\n\nexport const fetchNewestTenThunk = () => (dispatch) => {\n  return axios\n    .get(\n      `https://www.googleapis.com/books/v1/volumes?q=\"\"&key=${API_KEY}&maxResults=10`\n    )\n    .then((res) => res.data.items)\n    .then((tenBooks) => dispatch(fetchNewestTen(tenBooks)))\n    .catch((err) => console.log(\"Thunk err: \", err));\n};\nexport const searchBooksThunk = (search, ownProps) => (dispatch) => {\n    let url=`https://www.googleapis.com/books/v1/volumes?q=${Object.values(search)[0]}&printType=books&key=${API_KEY}`\n  return axios\n    .get(url)\n    .then((res) => res.data.items)\n    .then((books) => {\n      dispatch(searchProducts(books))\n      ownProps.history.push(\"/books/s/search\");\n    })\n    .catch((err) => console.log(err));\n};\n\n// REDUCER\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case GET_BOOK_INFO:\n      return action.payload;\n    case FETCH_NEWEST_TEN:\n      return action.payload;\n    case SEARCH_BOOKS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}