{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeevi\\\\ttp-team-3-master\\\\src\\\\components\\\\containers\\\\VerificationContainer.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { authenticateUser } from '../../thunks/index';\nimport { VerificationView } from \"../views\";\n\nclass VerificationContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.validateUser = () => {\n      this.props.authenticateUser(this.state.data, this.state.email_id);\n      const users = this.props.auth;\n      console.log(users);\n      let errors = { ...this.state.errors\n      };\n      let id = 5;\n      setTimeout(() => {\n        if (this.props.auth) {\n          //   return this.props.history.push(`/users/${users[i].id}`);\n          return this.props.history.push(\"/home\");\n        } else {\n          errors.username = \"Invalid username or password\";\n        }\n\n        this.setState({\n          id,\n          users,\n          errors\n        });\n      }, 500);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.validateUser();\n    };\n\n    this.state = {\n      data: \"\",\n      email_id: \"\",\n      isValidUser: false,\n      errors: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(VerificationView, {\n      data: this.state.data,\n      email_id: this.state.email_id,\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.allUsers.isLoggedIn);\n  return {\n    auth: state.allUsers.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticateUser: (username, password) => dispatch(authenticateUser(username, password))\n  };\n};\n\nVerificationContainer.propTypes = {\n  allUsers: PropTypes.array.isRequired,\n  fetchAllUsers: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(VerificationContainer);","map":{"version":3,"sources":["C:/Users/Jeevi/ttp-team-3-master/src/components/containers/VerificationContainer.js"],"names":["React","Component","PropTypes","connect","authenticateUser","VerificationView","VerificationContainer","constructor","props","handleChange","e","setState","target","name","value","validateUser","state","data","email_id","users","auth","console","log","errors","id","setTimeout","history","push","username","handleSubmit","preventDefault","isValidUser","render","mapStateToProps","allUsers","isLoggedIn","mapDispatchToProps","dispatch","password","propTypes","array","isRequired","fetchAllUsers","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {authenticateUser} from '../../thunks/index';\r\nimport { VerificationView } from \"../views\";\r\n\r\nclass VerificationContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: \"\",\r\n      email_id: \"\",\r\n      isValidUser: false,\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n\r\n  handleChange = (e) => {\r\n   \r\n      this.setState({\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    \r\n  };\r\n\r\n  validateUser = () => {\r\n    this.props.authenticateUser(this.state.data, this.state.email_id);\r\n    const users=this.props.auth;\r\n    console.log(users)\r\n    let errors = { ...this.state.errors };\r\n   let id=5;\r\n   setTimeout(() => {\r\n          \r\n    if(this.props.auth) {\r\n     //   return this.props.history.push(`/users/${users[i].id}`);\r\n     return this.props.history.push(\"/home\");\r\n    } else {\r\n      errors.username = \"Invalid username or password\";\r\n         \r\n    }\r\n    this.setState({ id,users, errors });\r\n}, 500);\r\n}\r\n  handleSubmit = (e) => {\r\n     e.preventDefault();\r\n    this.validateUser()\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* Can potentially be extracted into its own ErrorMessage component */}\r\n        <div className=\"text-danger\">\r\n       \r\n        </div>\r\n        <VerificationView\r\n          data={this.state.data}\r\n          email_id={this.state.email_id}\r\n          handleSubmit={this.handleSubmit}\r\n          handleChange={this.handleChange}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state.allUsers.isLoggedIn)\r\n    return {\r\n        auth:state.allUsers.isLoggedIn\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authenticateUser: (username, password) => dispatch(authenticateUser(username, password))\r\n    };\r\n};\r\n\r\n\r\nVerificationContainer.propTypes = {\r\n    allUsers: PropTypes.array.isRequired,\r\n    fetchAllUsers: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VerificationContainer);"]},"metadata":{},"sourceType":"module"}