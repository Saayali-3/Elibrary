{"ast":null,"code":"/*import React, { Component } from \"react\";\n//import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {searchBooksThunk} from \"../../thunks\";\nimport { withRouter } from \"react-router\";\nimport { NavBarView } from \"../views\";\n\nclass NavBarContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      search:\"\",\n    };\n  }\n  handleChange = (e) => {\n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n     this.props.searchBooks(this.state);\n  };\n  render() {\n    return <NavBarView \n    user={this.props.user}\n    search={this.state.search}\n    handleSubmit={this.handleSubmit}\n    handleChange={this.handleChange}\n    />;\n  }\n}\nconst mapState = (state) => {\n  return {\n    user:state.user,\n  };\n};\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    searchBooks: (Search) => dispatch(searchBooksThunk(Search, ownProps)),\n  };\n};\nexport default withRouter(connect(mapState,mapDispatch)(NavBarContainer));\n*/","map":{"version":3,"sources":["C:/Users/Jeevi/ttp-team-3-master/src/components/containers/NavBarContainer.js"],"names":[],"mappings":"AAAA","sourcesContent":["/*import React, { Component } from \"react\";\n//import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {searchBooksThunk} from \"../../thunks\";\nimport { withRouter } from \"react-router\";\nimport { NavBarView } from \"../views\";\n\nclass NavBarContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      search:\"\",\n    };\n  }\n  handleChange = (e) => {\n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n     this.props.searchBooks(this.state);\n  };\n  render() {\n    return <NavBarView \n    user={this.props.user}\n    search={this.state.search}\n    handleSubmit={this.handleSubmit}\n    handleChange={this.handleChange}\n    />;\n  }\n}\nconst mapState = (state) => {\n  return {\n    user:state.user,\n  };\n};\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    searchBooks: (Search) => dispatch(searchBooksThunk(Search, ownProps)),\n  };\n};\nexport default withRouter(connect(mapState,mapDispatch)(NavBarContainer));\n*/"]},"metadata":{},"sourceType":"module"}