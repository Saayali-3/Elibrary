{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeevi\\\\ttp-team-3-master\\\\src\\\\components\\\\containers\\\\LoginFormContainer.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { authenticateUser } from '../../thunks/index';\nimport { LoginFormView } from \"../views\";\n\nclass LoginFormContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.validateUser = () => {\n      const users = this.props.auth;\n      let errors = { ...this.state.errors\n      };\n      let id = 5;\n\n      if (users) {\n        this.props.history.push(`/users/5}`);\n        errors.userName = \"Valid user\";\n      } else {\n        errors.userName = \"Invalid username or password\";\n      }\n\n      this.setState({\n        id,\n        users,\n        errors\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.validateUser();\n    };\n\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      isValidUser: false,\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAllUsers();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, this.state.isValidUser ? `` : this.state.errors.userName), /*#__PURE__*/React.createElement(LoginFormView, {\n      userName: this.state.userName,\n      password: this.state.password,\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.allUsers.isLoggedIn);\n  return {\n    auth: state.allUsers.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticateUser: (username, password) => dispatch(authenticateUser(username, password))\n  };\n};\n\nLoginFormContainer.propTypes = {\n  allUsers: PropTypes.array.isRequired,\n  fetchAllUsers: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginFormContainer);","map":{"version":3,"sources":["C:/Users/Jeevi/ttp-team-3-master/src/components/containers/LoginFormContainer.js"],"names":["React","Component","PropTypes","connect","authenticateUser","LoginFormView","LoginFormContainer","constructor","props","handleChange","e","setState","target","name","value","validateUser","users","auth","errors","state","id","history","push","userName","handleSubmit","preventDefault","password","isValidUser","componentDidMount","fetchAllUsers","render","mapStateToProps","console","log","allUsers","isLoggedIn","mapDispatchToProps","dispatch","username","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {authenticateUser} from '../../thunks/index';\nimport { LoginFormView } from \"../views\";\n\nclass LoginFormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      isValidUser: false,\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAllUsers();\n  }\n\n  handleChange = (e) => {\n   \n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n    \n  };\n\n  validateUser = () => {\n    const users=this.props.auth\n    let errors = { ...this.state.errors };\n   let id=5;\n    if (users) {\n      this.props.history.push(`/users/5}`);\n      errors.userName = \"Valid user\";\n    }\n    else{\n      errors.userName = \"Invalid username or password\";\n    }\n    this.setState({ id,users, errors });\n  };\n\n  handleSubmit = (e) => {\n     e.preventDefault();\n    this.validateUser()\n  };\n  render() {\n    return (\n      <>\n        {/* Can potentially be extracted into its own ErrorMessage component */}\n        <div className=\"text-danger\">\n        {this.state.isValidUser ?``: this.state.errors.userName}\n        </div>\n        <LoginFormView\n          userName={this.state.userName}\n          password={this.state.password}\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state.allUsers.isLoggedIn)\n    return {\n        auth:state.allUsers.isLoggedIn\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        authenticateUser: (username, password) => dispatch(authenticateUser(username, password))\n    };\n};\n\n\nLoginFormContainer.propTypes = {\n    allUsers: PropTypes.array.isRequired,\n    fetchAllUsers: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginFormContainer);"]},"metadata":{},"sourceType":"module"}