{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeevi\\\\ttp-team-3-master\\\\src\\\\components\\\\containers\\\\LoginFormContainer.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { authenticateUser } from '../../thunks/index';\nimport { LoginFormView } from \"../views\";\n\nclass LoginFormContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.validateUser = () => {\n      this.props.authenticateUser(this.state.username, this.state.password);\n      const users = this.props.auth;\n      console.log(users);\n      let errors = { ...this.state.errors\n      };\n      let id = 5;\n      setTimeout(() => {\n        if (this.props.auth) {\n          //   return this.props.history.push(`/users/${users[i].id}`);\n          return this.props.history.push(\"/verification\");\n        } else {\n          errors.username = \"Invalid username or password\";\n        }\n\n        this.setState({\n          id,\n          users,\n          errors\n        });\n      }, 500);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.validateUser();\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isValidUser: false,\n      errors: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, this.state.isValidUser ? `` : this.state.errors.username), /*#__PURE__*/React.createElement(LoginFormView, {\n      username: this.state.username,\n      password: this.state.password,\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.allUsers.isLoggedIn);\n  return {\n    auth: state.allUsers.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticateUser: (username, password) => dispatch(authenticateUser(username, password))\n  };\n};\n\nLoginFormContainer.propTypes = {\n  allUsers: PropTypes.array.isRequired,\n  fetchAllUsers: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginFormContainer);","map":{"version":3,"sources":["C:/Users/Jeevi/ttp-team-3-master/src/components/containers/LoginFormContainer.js"],"names":["React","Component","PropTypes","connect","authenticateUser","LoginFormView","LoginFormContainer","constructor","props","handleChange","e","setState","target","name","value","validateUser","state","username","password","users","auth","console","log","errors","id","setTimeout","history","push","handleSubmit","preventDefault","isValidUser","render","mapStateToProps","allUsers","isLoggedIn","mapDispatchToProps","dispatch","propTypes","array","isRequired","fetchAllUsers","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {authenticateUser} from '../../thunks/index';\nimport { LoginFormView } from \"../views\";\n\nclass LoginFormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isValidUser: false,\n      errors: {},\n    };\n  }\n\n\n  handleChange = (e) => {\n   \n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n    \n  };\n\n  validateUser = () => {\n    this.props.authenticateUser(this.state.username, this.state.password);\n    const users=this.props.auth;\n    console.log(users)\n    let errors = { ...this.state.errors };\n   let id=5;\n   setTimeout(() => {\n          \n    if(this.props.auth) {\n     //   return this.props.history.push(`/users/${users[i].id}`);\n     return this.props.history.push(\"/verification\");\n    } else {\n      errors.username = \"Invalid username or password\";\n         \n    }\n    this.setState({ id,users, errors });\n}, 500);\n}\n  handleSubmit = (e) => {\n     e.preventDefault();\n    this.validateUser()\n  };\n  render() {\n    return (\n      <>\n        {/* Can potentially be extracted into its own ErrorMessage component */}\n        <div className=\"text-danger\">\n        {this.state.isValidUser ?``: this.state.errors.username}\n        </div>\n        <LoginFormView\n          username={this.state.username}\n          password={this.state.password}\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state.allUsers.isLoggedIn)\n    return {\n        auth:state.allUsers.isLoggedIn\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        authenticateUser: (username, password) => dispatch(authenticateUser(username, password))\n    };\n};\n\n\nLoginFormContainer.propTypes = {\n    allUsers: PropTypes.array.isRequired,\n    fetchAllUsers: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginFormContainer);"]},"metadata":{},"sourceType":"module"}