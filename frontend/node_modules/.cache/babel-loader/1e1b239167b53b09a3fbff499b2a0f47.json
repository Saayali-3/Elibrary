{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeevi\\\\ttp-team-3-master\\\\src\\\\components\\\\containers\\\\EditUserFormContainer.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { fetchUserThunk, editUserThunk } from \"../../thunks\";\nimport { connect } from \"react-redux\";\nimport { EditUserFormView } from \"../views\";\n\nclass EditUserFormContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const id = this.props.match.params.id;\n      this.props.editUser(id, this.state);\n      this.props.history.push(`/users/${id}`);\n    };\n\n    this.state = {\n      userName: \"\",\n      password: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchUser(this.props.match.params.id).then(({\n      payload\n    }) => {\n      this.setState(payload);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(EditUserFormView, {\n      userName: this.state.userName,\n      password: this.state.password,\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    campus: state.campus\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchUser: id => dispatch(fetchUserThunk(id)),\n    editUser: (id, campus) => dispatch(editUserThunk(id, campus))\n  };\n};\n\nEditUserFormContainer.propTypes = {\n  fetchUser: PropTypes.func.isRequired,\n  editUser: PropTypes.func.isRequired\n};\nexport default connect(mapState, mapDispatch)(EditUserFormContainer);","map":{"version":3,"sources":["C:/Users/Jeevi/ttp-team-3-master/src/components/containers/EditUserFormContainer.js"],"names":["React","Component","PropTypes","fetchUserThunk","editUserThunk","connect","EditUserFormView","EditUserFormContainer","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","id","match","params","editUser","state","history","push","userName","password","componentDidMount","fetchUser","then","payload","render","mapState","campus","mapDispatch","dispatch","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,cAA9C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,UAAjC;;AAEA,MAAMC,qBAAN,SAAoCN,SAApC,CAA8C;AAC5CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,YAdmB,GAcHC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADd,OAAd;AAGD,KAlBkB;;AAAA,SAoBnBC,YApBmB,GAoBHL,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACM,cAAF;AACA,YAAMC,EAAE,GAAG,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,MAAjB,CAAwBF,EAAnC;AACA,WAAKT,KAAL,CAAWY,QAAX,CAAoBH,EAApB,EAAwB,KAAKI,KAA7B;AACA,WAAKb,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,CAAyB,UAASN,EAAG,EAArC;AACD,KAzBkB;;AAEjB,SAAKI,KAAL,GAAa;AACXG,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKlB,KAAL,CAAWmB,SAAX,CAAqB,KAAKnB,KAAL,CAAWU,KAAX,CAAiBC,MAAjB,CAAwBF,EAA7C,EAAiDW,IAAjD,CAAsD,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAiB;AACrE,WAAKlB,QAAL,CAAckB,OAAd;AACD,KAFD;AAGD;;AAeDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,gBAAD;AACE,MAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWG,QADvB;AAEE,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,QAFvB;AAGE,MAAA,YAAY,EAAE,KAAKV,YAHrB;AAIE,MAAA,YAAY,EAAE,KAAKN,YAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AArC2C;;AAwC9C,MAAMsB,QAAQ,GAAIV,KAAD,IAAW;AAC1B,SAAO;AAAEW,IAAAA,MAAM,EAAEX,KAAK,CAACW;AAAhB,GAAP;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLP,IAAAA,SAAS,EAAGV,EAAD,IAAQiB,QAAQ,CAAChC,cAAc,CAACe,EAAD,CAAf,CADtB;AAELG,IAAAA,QAAQ,EAAE,CAACH,EAAD,EAAKe,MAAL,KAAgBE,QAAQ,CAAC/B,aAAa,CAACc,EAAD,EAAKe,MAAL,CAAd;AAF7B,GAAP;AAID,CALD;;AAOA1B,qBAAqB,CAAC6B,SAAtB,GAAkC;AAChCR,EAAAA,SAAS,EAAE1B,SAAS,CAACmC,IAAV,CAAeC,UADM;AAEhCjB,EAAAA,QAAQ,EAAEnB,SAAS,CAACmC,IAAV,CAAeC;AAFO,CAAlC;AAKA,eAAejC,OAAO,CAAC2B,QAAD,EAAWE,WAAX,CAAP,CAA+B3B,qBAA/B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { fetchUserThunk, editUserThunk } from \"../../thunks\";\nimport { connect } from \"react-redux\";\nimport { EditUserFormView } from \"../views\";\n\nclass EditUserFormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      password: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchUser(this.props.match.params.id).then(({ payload }) => {\n      this.setState(payload);\n    });\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const id = this.props.match.params.id;\n    this.props.editUser(id, this.state);\n    this.props.history.push(`/users/${id}`);\n  };\n\n  render() {\n    return (\n      <EditUserFormView\n        userName={this.state.userName}\n        password={this.state.password}\n        handleSubmit={this.handleSubmit}\n        handleChange={this.handleChange}\n      />\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return { campus: state.campus };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchUser: (id) => dispatch(fetchUserThunk(id)),\n    editUser: (id, campus) => dispatch(editUserThunk(id, campus)),\n  };\n};\n\nEditUserFormContainer.propTypes = {\n  fetchUser: PropTypes.func.isRequired,\n  editUser: PropTypes.func.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(EditUserFormContainer);"]},"metadata":{},"sourceType":"module"}